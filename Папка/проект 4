Проект 4. Моделирование изменения балансов студентов
Задание 1. Посмотреть на изменения балансов студентов (на примере топ-1000 строк), собранных из CTE. Ответить на вопрос какие данные нас смущают. И сформулировать вопросы, которые стоит задавать дата-инженерам и владельцам таблиц.
Задание 2. Создать визуализацию (линейную диаграмму) итогового результата. И сделать выводы из получившейся визуализации.
Решение.
Шаг 1. Для начала мы узнали, когда была первая транзакция для каждого студента. Начиная с этой даты нужно было собирать его баланс уроков. Шаг 2. Собрали таблицу с датами за каждый календарный день 2016 года.
Шаг 3. Чтобы узнать за какие даты имеет смысл собирать баланс для каждого студента объединили таблицы и создали CTE all_dates_by_user, где будут храниться все даты жизни студента после того, как произошла его первая транзакция. 
Шаг 4. Нашли все изменения балансов, связанные с успешными транзакциями. Выбрали все транзакции из таблицы payments, сгруппировали их по user_id и дате транзакции (без времени) и нашли сумму по полю classes.
Шаг 5. Затем нашли баланс студентов, который сформирован только транзакциями. Для этого объединили all_dates_by_user и payments_by_dates так, чтобы совпадали даты и user_id. Использовали оконные выражения (функцию sum), чтобы найти кумулятивную сумму по полю transaction_balance_change для всех строк до текущей включительно с разбивкой по user_id и сортировкой по dt.
Шаг 6. Далее нашли изменения балансов из-за прохождения уроков. Создали CTE classes_by_dates, посчитав в таблице classes количество уроков за каждый день для каждого ученика.
Шаг 7. По аналогии с уже проделанным шагом для оплат создали CTE для хранения кумулятивной суммы количества пройденных уроков. Для этого объединили таблицы all_dates_by_user и classes_by_dates так, чтобы совпадали даты и user_id. Использовали оконные выражения (функцию sum), чтобы найти кумулятивную сумму по полю classes для всех строк до текущей включительно с разбивкой по user_id и сортировкой по dt.
Шаг 8. Затем создали CTE balances с вычисленными балансами каждого студента. Для этого объединили таблицы payments_by_dates_cumsum и classes_by_dates_dates_cumsum так, чтобы совпадали даты и user_id.
Шаг 9. Чтобы посмотреть, как менялось общее количество уроков на балансах студентов, просуммировали поля transaction_balance_change, transaction_balance_change_cs, classes, classes_cs, balance из CTE balances с группировкой и сортировкой по dt.
Выводы: Задание 1. Начиная с user_id =1984910 со 2.06.2016 г. balance идёт отрицательный. Такого не должно быть, т.к. количество уроков не может быть отрицательным. Следовательно, вопрос к дата-инженерам, почему так произошло? Возможно, из-за учёта каких-то бонусных уроков произошёл такой сбой. Можем также заметить, что есть списания по 4 урока в день, что является подозрительным. 

Задание 2. Общее количество уроков по дням на балансе учеников постепенно увеличивается с каждым месяцем и к концу года достигает своего максимального значения. 
Пиковые значения transaction_balance_change приходятся чаще всего на среду и пятницу, это значит, что студенты начиная с середины и к концу недели покупают больше всего уроков. Скорее всего это связано с тем, что в выходные дни у студентов больше времени на изучение новых уроков. 

На графике поле balance показывает нам усредненные значения по покупке уроков всеми учениками за выбранный период времени.
Положительный баланс на конец года говорит нам о том, что все эти уроки уже куплены у нас, то есть так или иначе, нам придется эти услуги предоставить или вернуть деньги, если мы решим в конце года закрыть бизнес. 
